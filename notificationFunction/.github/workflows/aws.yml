name: Deploy SAM Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Build with Maven
        run: |
          mvn -B package -DskipTests --file pom.xml
          sam build

      - name: Determine environment
        id: determine-env
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
          else
            echo "env=dev" >> $GITHUB_OUTPUT
          fi

      # Initial deployment to create the stack with deployment bucket
      - name: Initial SAM deploy
        id: initial-deploy
        continue-on-error: true
        run: |
          environment="${{ steps.determine-env.outputs.env }}"
          email_subscription="${{ secrets.EMAIL_SUBSCRIPTION }}"
          
          sam deploy \
            --stack-name s3-notification-$environment \
            --parameter-overrides "Environment=$environment EmailSubscription=$email_subscription" \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset

      # Get the deployment bucket name from CloudFormation output
      - name: Get deployment bucket
        id: get-bucket
        run: |
          environment="${{ steps.determine-env.outputs.env }}"
          deployment_bucket=$(aws cloudformation describe-stacks --stack-name s3-notification-$environment --query "Stacks[0].Outputs[?OutputKey=='DeploymentBucketName'].OutputValue" --output text)
          
          if [ -z "$deployment_bucket" ]; then
            echo "Could not retrieve deployment bucket name from stack outputs."
            exit 1
          fi
          
          echo "DEPLOYMENT_BUCKET=$deployment_bucket" >> $GITHUB_ENV
          echo "Deployment bucket: $deployment_bucket"

      - name: Deploy SAM application
        run: |
          email_subscription="${{ secrets.EMAIL_SUBSCRIPTION }}"
          environment="${{ steps.determine-env.outputs.env }}"
          
          sam deploy \
            --stack-name s3-notification-$environment \
            --parameter-overrides "Environment=$environment EmailSubscription=$email_subscription" \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset