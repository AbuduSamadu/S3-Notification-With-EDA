name: Deploy SAM Application

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Build and package Lambda function
        run: |
          cd notificationFunction
          mvn clean package
          cd ..

      - name: SAM Build
        run: sam build

      - name: Determine environment
        id: determine-env
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
          else
            echo "env=dev" >> $GITHUB_OUTPUT
          fi

      - name: Create S3 bucket for deployment if it doesn't exist
        run: |
          environment="${{ steps.determine-env.outputs.env }}"
          bucket_name="sam-deployment-bucket-$environment-${{ secrets.AWS_REGION }}-${{ github.repository_owner }}"
          bucket_name=$(echo "$bucket_name" | tr '[:upper:]' '[:lower:]' | tr '/' '-')
          
          # Check if bucket exists
          if ! aws s3api head-bucket --bucket "$bucket_name" 2>/dev/null; then
            echo "Creating deployment bucket: $bucket_name"
            aws s3 mb "s3://$bucket_name" --region ${{ secrets.AWS_REGION }}
          else
            echo "Deployment bucket already exists: $bucket_name"
          fi
          
          # Export bucket name for later use
          echo "DEPLOYMENT_BUCKET=$bucket_name" >> $GITHUB_ENV

      - name: Deploy SAM application
        run: |
          email_subscription="${{ secrets.EMAIL_SUBSCRIPTION }}"
          environment="${{ steps.determine-env.outputs.env }}"
          
          sam deploy \
            --stack-name s3-notification-$environment \
            --s3-bucket ${{ env.DEPLOYMENT_BUCKET }} \
            --parameter-overrides "Environment=$environment EmailSubscription=$email_subscription" \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset